{"version":3,"file":"commonHelpers.js","sources":["../src/js/createMarkup.js","../src/js/api/weatherApi.js","../src/js/api/opencagedataApi.js","../src/js/api/pixabayApi.js","../src/js/helpers/getRandomIndex.js","../src/js/helpers/setBackground.js","../src/js/refs.js","../src/js/currentTime.js","../src/js/storage.js","../src/js/favoriteBtn.js","../src/js/swiper.js","../src/js/saveFavorite.js","../src/main.js"],"sourcesContent":["import { format } from 'date-fns';\n\nconst swiperList = document.querySelector('.city-slider__wrapper');\nconst weatherWrapperOneDay = document.querySelector('.weather__wrapper-oneDay');\nconst cityName = document.querySelector('.city-name');\nconst weatherInfo = document.querySelector('.weather-info');\n\nexport const createMarkupFiveDays = data => {\n  console.log(data);\n  const icon = data.list[0].weather[0].icon;\n  const description = data.list[0].weather[0].description;\n  const tempMin = data.list[0].main.temp_min;\n  const tempMax = data.list[0].main.temp_max;\n\n  const newList = data.list.reduce((acc, item, index) => {\n    const day = format(new Date(item.dt * 1000), 'EEEE');\n    const date = format(new Date(item.dt * 1000), 'dd LLL');\n    if (acc.length > 0 && day === acc[acc.length - 1].day) {\n      acc[acc.length - 1].day = day;\n      acc[acc.length - 1].date = date;\n      acc[acc.length - 1].icon = icon;\n      acc[acc.length - 1].description = description;\n      acc[acc.length - 1].temp_min = tempMin;\n      acc[acc.length - 1].temp_max = tempMax;\n    } else {\n      acc.push({ day, date, icon, description, tempMin, tempMax });\n    }\n    return acc;\n  }, []);\n  console.log(newList);\n\n  const markupFive = newList.slice(0, 5).map(el => {\n    console.log(el);\n    return `\n          <li class=\"weather-info-item\">\n              <p class=\"day\">${el.day}</p>\n              <p class=\"date\">${el.date}</p>\n              <img class=\"weather-img\" src=\"https://openweathermap.org/img/wn/${\n                el.icon\n              }@2x.png\" alt=\"${el.description}\" />\n              <div class=\"temperature\">\n                <div><p class=\"min-temperature\">min </p>\n                <span class=\"temperature-span\">${el.tempMin.toFixed(\n                  0\n                )}&#176;</span></div>\n                <div><p class=\"max-temperature\">max </p>\n                <span class=\"temperature-span\">${el.tempMax.toFixed(\n                  0\n                )}&#176;</span></div>\n              </div>\n              <button class=\"more-info-btn\">more info</button>\n          </li>`;\n  });\n\n  // const dates = data.list\n  //   .map(element => element.dt)\n  //   .filter((el, index, arr) => arr.indexOf(el) === index);\n  // console.log(dates);\n  // const listItem = data.list.map(el => {\n  //   console.log(el);\n  //   data.list.filter(elem => elem.dt === el);\n  // });\n  // console.log(listItem);\n  //   .map(el => {\n  //     const day = format(new Date(el.dt * 1000), 'EEEE');\n  //     const date = format(new Date(el.dt * 1000), 'cc LLL');\n  //     console.log(el);\n  //     return `\n  //         <li class=\"weather-info-item\">\n  //             <p class=\"day\">${day}</p>\n  //             <p class=\"date\">${date}</p>\n  //             <img class=\"weather-img\" src=\"https://openweathermap.org/img/wn/${\n  //               el.weather[0].icon\n  //             }@2x.png\" alt=\"${el.weather[0].description}\" />\n  //             <div class=\"temperature\">\n  //               <div><p class=\"min-temperature\">min </p>\n  //               <span class=\"teperature-span\">${el.main.temp_min.toFixed(\n  //                 0\n  //               )}&#176;</span></div>\n  //               <div><p class=\"max-temperature\">max </p>\n  //               <span class=\"teperature-span\">${el.main.temp_max.toFixed(\n  //                 0\n  //               )}&#176;</span></div>\n  //             </div>\n  //             <p class=\"more-info-card\">more info</p>\n  //         </li>`;\n  //   });\n\n  weatherInfo.innerHTML = markupFive;\n  cityName.textContent = data.city.name + ', ' + data.city.country;\n\n  // const moreInfo = document.querySelector('.more-info-btn');\n  // moreInfo.addEventListener('click', moreInfoClicked);\n\n  //   const moreInfoClicked = data => {\n  //     newList.map(el => {\n  //       return ` <div class=\"more-info\">\n  //     <ul class=\"more-info-list\">\n  //       <li class=\"more-info-item\">\n  //         <p class=\"weather-time\"></p>\n  //         <img class=\"weather-img\" src=\"https://openweathermap.org/img/wn/${\n  //           el.icon\n  //         }@2x.png\" alt=\"${el.description}\" />\n  //         <p class=\"temperature-moreInfo\">${el.temp.toFixed(0)}</p>\n  //         <div>\n  //           <svg class=\"barometer\" width=\"20px\" height=\"20px\">\n  //             <use href=\"../img/symbol-defs.svg#icon-barometer\"></use>\n  //           </svg>\n  //           <p class=\"barometer-value\">${el}</p>\n  //         </div>\n  //         <div>\n  //           <svg class=\"humidity\" width=\"20px\" height=\"20px\">\n  //             <use href=\"../img/symbol-defs.svg#icon-humidity\"></use>\n  //           </svg>\n  //           <p class=\"humidity-value\"></p>\n  //         </div>\n  //         <div>\n  //           <svg class=\"wind\" width=\"20px\" height=\"20px\">\n  //             <use href=\"../img/symbol-defs.svg#icon-wind\"></use>\n  //           </svg>\n  //           <p class=\"wind-value\"></p>\n  //         </div>\n  //       </li>\n  //     </ul>\n  //   </div>`;\n  //     });\n  //   };\n};\n\nexport const createFavoriteCities = items => {\n  const markup = items\n    .map((el, index) => {\n      return `<li data-name=\"${el}\" data-hash=\"slide-${\n        index + 1\n      }\" class=\"city-slider__slide swiper-slide\">\n              ${el}\n            <button class=\"deleteFavoriteBtn\"><svg class=\"close-favorite\" width=\"12px\" height=\"12px\">\n            <use href=\"/img/symbol-defs.svg#icon-close\"></use>\n          </svg></button></li>`;\n    })\n    .join('');\n  swiperList.insertAdjacentHTML('beforeend', markup);\n};\n\nexport const createMarkupOneDay = ({ name, main, sys, weather }) => {\n  const sunset = document.querySelector('.sunset-time');\n  const sunrise = document.querySelector('.sunrise-time');\n  const markupOneDay = `<div class=\"weather__card-oneDay\">\n      <ul class=\"oneDayList\">\n      <li class=\"oneDayItem\"> \n        <img class=\"weather-imgOneDay\" src=\"https://openweathermap.org/img/wn/${\n          weather[0].icon\n        }@2x.png\" alt=\"${weather[0].description}\" />\n        <h2 class=\"city-name-oneDay\">${name}, ${sys.country}</h2>\n        <p class=\"temperature-oneDay\">${main.temp.toFixed(0)}</p>\n        <div class=\"temperature\">\n            <div>\n                <p class=\"min-temperature\">min </p>\n                <span class=\"teperature-span\">${main.temp_min.toFixed(\n                  0\n                )}&#176;</span></div>\n            <div>\n                <p class=\"max-temperature\">max </p>\n                <span class=\"teperature-span\">${main.temp_max.toFixed(\n                  0\n                )}&#176;</span>\n            </div>\n        </div> \n      </li>    \n      </ul>    \n  </div>`;\n  weatherWrapperOneDay.innerHTML = markupOneDay;\n  sunrise.textContent = format(new Date(sys.sunrise * 1000), 'HH:mm');\n  sunset.textContent = format(new Date(sys.sunset * 1000), 'HH:mm');\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.openweathermap.org/data/2.5',\n  params: {\n    appid: '95632b02f9162f375a368971925f5209',\n    units: 'metric',\n  },\n});\n\nexport const getWeatherByQuery = async city => {\n  const { data } = await instance.get(`/weather`, {\n    params: {\n      q: city,\n    },\n  });\n  console.log(data);\n  return data;\n};\n\nexport const getWeatherByCoords = async ({ latitude, longitude }) => {\n  // https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}\n  const { data } = await instance.get(`/weather`, {\n    params: {\n      lat: latitude,\n      lon: longitude,\n    },\n  });\n  return data;\n};\n\nexport const getWeatherForFiveDays = async ({ latitude, longitude }) => {\n  // api.openweathermap.org/data/2.5/forecast?lat={lat}&lon={lon}&appid={API key}\n  const { data } = await instance.get(`/forecast`, {\n    params: {\n      lat: latitude,\n      lon: longitude,\n    },\n  });\n  console.log(data);\n  return data;\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.opencagedata.com/geocode/v1/json',\n  params: {\n    key: 'd4683b09d0c94ec0aebf0b2e043decbf',\n    language: 'en',\n  },\n});\n\nexport const getUserInfo = async ({ latitude, longitude }) => {\n  const urlPosition = `?q=${latitude}+${longitude}`;\n  const { data } = await instance.get(urlPosition);\n  return data.results[0].components.country;\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://pixabay.com/api/',\n  params: {\n    image_type: 'backgrounds',\n    orientation: 'horizontal',\n    per_page: '40',\n    key: '37485893-252f507e861118bf45a5e3b29',\n  },\n});\n\nexport const getPhotos = async place => {\n  const { data } = await instance.get('', {\n    params: {\n      q: place,\n    },\n  });\n  return data.hits;\n};\n","export const getRandomIndex = max => {\n  return Math.floor(Math.random() * (max + 1) + 1);\n};\n","import { getRandomIndex } from './getRandomIndex';\n\nexport const setBackground = hits => {\n  const index = getRandomIndex(hits.length - 1);\n  const { largeImageURL } = hits[index];\n  document.body.style = `background: linear-gradient(rgba(255, 255, 53, 0.1), rgba(48, 62, 143, 0.1 )),\n  url('${largeImageURL}') center fixed; background-size: cover;`;\n};\n","export const refs = {\n  startBtn: document.querySelector('.start'),\n  stopBtn: document.querySelector('.stop'),\n  form: document.querySelector('.search-form'),\n  swiperList: document.querySelector('.city-slider__wrapper'),\n  saveFavoriteBtn: document.querySelector('.saveFavoriteBtn'),\n  dateOneDay: document.querySelector('.dateOneDay'),\n  month: document.querySelector('.month'),\n  timer: document.querySelector('.timeSpan'),\n};\n","import { format } from 'date-fns';\nimport { refs } from './refs';\n\nexport const updateCurrentTime = () => {\n  setInterval(() => {\n    refs.timer.textContent = format(new Date(), 'HH:mm:ss');\n    refs.month.textContent = format(new Date(), 'LLLL');\n    refs.dateOneDay.textContent = format(new Date(), 'do E');\n  }, 1000);\n};\n","export const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nexport const load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n","const saveFavoriteBtn = document.querySelector('.saveFavoriteBtn');\n\nexport const btnAddFavorite = () => {\n  saveFavoriteBtn.classList.add('inFavorite');\n  saveFavoriteBtn.disabled = true;\n};\n\nexport const btnRemoveFavorite = () => {\n  saveFavoriteBtn.classList.remove('inFavorite');\n  saveFavoriteBtn.disabled = false;\n};\n","import Swiper from 'swiper';\nimport { Navigation } from 'swiper/modules';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\n\nexport const swiper = new Swiper('.city-slider', {\n  modules: [Navigation],\n  navigation: {\n    nextEl: '.button-next',\n    prevEl: '.button-prev',\n  },\n  slidesPerView: 'auto',\n  loop: false,\n  createElements: true,\n  // centeredSlides: false,\n\n  // slidesPerView: 'auto',\n  // breakpoints: {\n  //   320: {\n  //     slidesPerView: 2,\n  //   },\n  //   480: {\n  //     slidesPerView: 3,\n  //   },\n  //   992: {\n  //     slidesPerView: 4,\n  //   },\n  // },\n});\n","import { refs } from './refs';\nimport { save, load } from './storage.js';\nimport { btnAddFavorite, btnRemoveFavorite } from './favoriteBtn.js';\nimport { swiper } from './swiper.js';\nimport { createFavoriteCities, createMarkupFiveDays } from './createMarkup';\nimport { getWeatherByQuery } from './api/weatherApi';\n\nconst persistedFavorites = load('favorite') || [];\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  const { value } = e.target.elements.user_country;\n  if (!value) {\n    return;\n  }\n  getWeatherByQuery(value).then(createMarkupFiveDays);\n}\n\nrefs.saveFavoriteBtn.addEventListener('click', saveFavorite);\n\nfunction saveFavorite() {\n  persistedFavorites.push(refs.form.elements.user_country.value);\n  save('favorite', persistedFavorites);\n\n  createFavoriteCities([refs.form.elements.user_country.value]);\n\n  btnAddFavorite();\n  swiper.update();\n}\n\nrefs.form.addEventListener('input', handleInput);\n\nfunction handleInput(e) {\n  const value = e.target.value.toLowerCase();\n  if (persistedFavorites.find(element => element.toLowerCase() === value)) {\n    btnAddFavorite();\n    return;\n  }\n  btnRemoveFavorite();\n}\n\nrefs.swiperList.addEventListener('click', handleFavoriteClick);\n\nfunction handleFavoriteClick(e) {\n  if (e.target.nodeName === 'UL') {\n    return;\n  }\n  if (e.target.nodeName === 'BUTTON') {\n    const item = e.target.parentNode;\n    const filteredFavorites = persistedFavorites.filter(\n      el => el.toLowerCase() !== item.dataset.name.toLowerCase()\n    );\n\n    save('favorite', filteredFavorites);\n    item.remove();\n  }\n  if (e.target.nodeName === 'LI') {\n    refs.form.elements.user_country.value = e.target.dataset.name;\n    getWeatherByQuery(e.target.dataset.name).then(createMarkupFiveDays);\n    btnAddFavorite();\n  }\n}\n\nexport const updateFavorites = () => {\n  createFavoriteCities(persistedFavorites);\n  swiper.update();\n};\n","import 'material-icons/iconfont/material-icons.css';\nimport { createMarkupFiveDays, createMarkupOneDay } from './js/createMarkup';\nimport {\n  getWeatherByCoords,\n  getWeatherByQuery,\n  getWeatherForFiveDays,\n} from './js/api/weatherApi';\nimport { getUserInfo } from './js/api/opencagedataApi';\nimport { getPhotos } from './js/api/pixabayApi';\nimport { setBackground } from './js/helpers/setBackground';\nimport { updateCurrentTime } from './js/currentTime.js';\nimport { updateFavorites } from './js/saveFavorite.js';\nimport { format } from 'date-fns';\n\nlet coords = {};\nloadPage();\n\nfunction loadPage() {\n  updateFavorites();\n  updateCurrentTime();\n  const success = pos => {\n    coords = pos.coords;\n    getWeatherByCoords(pos.coords).then(createMarkupOneDay);\n    // getWeatherByCoords(pos.coords).then(createMarkupWeatherDate);\n\n    getUserInfo(pos.coords).then(getPhotos).then(setBackground);\n  };\n\n  navigator.geolocation.getCurrentPosition(success);\n}\n\nconst buttonsOneOrFive = document.querySelector('.buttonsOneOrFive');\nconst weatherWrapperOneDay = document.querySelector('.weather__wrapper-oneDay');\nconst weatherWrapperOneDayDate = document.querySelector(\n  '.weather__wrapper-oneDayDate'\n);\nconst weatherWrapper = document.querySelector('.weather__wrapper');\nconst wrapper = document.querySelector('.wrapper');\nconst chart = document.querySelector('.chart');\n\nbuttonsOneOrFive.addEventListener('click', fiveDaysInfo);\n\nfunction fiveDaysInfo(e) {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  const fiveDay = document.querySelector('.btn-five');\n  const oneDay = document.querySelector('.btn-today');\n  if (e.target.dataset.day === 'five') {\n    weatherWrapperOneDay.style.display = 'none';\n    weatherWrapperOneDayDate.style.display = 'none';\n    weatherWrapper.style.display = 'block';\n    chart.style.display = 'block';\n    wrapper.classList.add('wrapper-with-margin');\n    fiveDay.disabled = true;\n    oneDay.disabled = false;\n    fiveDay.classList.remove('btn-disActive');\n    oneDay.classList.add('btn-disActive');\n    getWeatherForFiveDays(coords).then(createMarkupFiveDays);\n    return;\n  }\n  oneDay.classList.remove('btn-disActive');\n  fiveDay.classList.add('btn-disActive');\n  oneDay.disabled = true;\n  fiveDay.disabled = false;\n  weatherWrapperOneDay.style.display = 'flex';\n  weatherWrapperOneDayDate.style.display = 'flex';\n  weatherWrapper.style.display = 'none';\n  chart.style.display = 'none';\n  wrapper.classList.remove('wrapper-with-margin');\n}\n\n// const newList = list.map(item => {\n//   const date = format(new Date(item.dt * 1000), 'Pp');\n//   const day = format(new Date(item.dt * 1000), 'EEEE');\n//   console.log(day);\n//   return { date, ...item };\n// });\n// console.log(newList);\n\n// const newList = list.reduce((acc, item, index) => {\n//   const day = format(new Date(item.dt * 1000), 'EEEE');\n//   if (acc.length > 0 && day === acc[acc.length - 1].day) {\n//     acc[acc.length - 1].day = day;\n//   } else {\n//     acc.push({ day });\n//   }\n//   return acc;\n// }, []);\n// console.log(newList);\n"],"names":["swiperList","weatherWrapperOneDay","cityName","weatherInfo","createMarkupFiveDays","data","icon","description","tempMin","tempMax","newList","acc","item","index","day","format","date","markupFive","el","createFavoriteCities","items","markup","createMarkupOneDay","name","main","sys","weather","sunset","sunrise","markupOneDay","instance","axios","getWeatherByQuery","city","getWeatherByCoords","latitude","longitude","getWeatherForFiveDays","getUserInfo","urlPosition","getPhotos","place","getRandomIndex","max","setBackground","hits","largeImageURL","refs","updateCurrentTime","save","key","value","serializedState","error","load","saveFavoriteBtn","btnAddFavorite","btnRemoveFavorite","swiper","Swiper","Navigation","persistedFavorites","handleSubmit","saveFavorite","handleInput","element","handleFavoriteClick","filteredFavorites","updateFavorites","coords","loadPage","success","pos","buttonsOneOrFive","weatherWrapperOneDayDate","weatherWrapper","wrapper","chart","fiveDaysInfo","fiveDay","oneDay"],"mappings":"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"}