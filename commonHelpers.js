import{f as l,a as m,S as $,N as C}from"./assets/vendor-b45ecd2d.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const c of a.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function r(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function o(s){if(s.ep)return;s.ep=!0;const a=r(s);fetch(s.href,a)}})();const N=document.querySelector(".city-slider__wrapper"),E=document.querySelector(".weather__wrapper-oneDay"),B=document.querySelector(".city-name"),k=document.querySelector(".weather-info"),y=e=>{console.log(e);const t=e.list[0].weather[0].icon,r=e.list[0].weather[0].description,o=e.list[0].main.temp_min,s=e.list[0].main.temp_max,a=e.list.reduce((n,v,te)=>{const p=l(new Date(v.dt*1e3),"EEEE"),h=l(new Date(v.dt*1e3),"dd LLL");return n.length>0&&p===n[n.length-1].day?(n[n.length-1].day=p,n[n.length-1].date=h,n[n.length-1].icon=t,n[n.length-1].description=r,n[n.length-1].temp_min=o,n[n.length-1].temp_max=s):n.push({day:p,date:h,icon:t,description:r,tempMin:o,tempMax:s}),n},[]);console.log(a);const c=a.slice(0,5).map(n=>(console.log(n),`
          <li class="weather-info-item">
              <p class="day">${n.day}</p>
              <p class="date">${n.date}</p>
              <img class="weather-img" src="https://openweathermap.org/img/wn/${n.icon}@2x.png" alt="${n.description}" />
              <div class="temperature">
                <div><p class="min-temperature">min </p>
                <span class="temperature-span">${n.tempMin.toFixed(0)}&#176;</span></div>
                <div><p class="max-temperature">max </p>
                <span class="temperature-span">${n.tempMax.toFixed(0)}&#176;</span></div>
              </div>
              <button class="more-info-btn">more info</button>
          </li>`));k.innerHTML=c,B.textContent=e.city.name+", "+e.city.country},D=e=>{const t=e.map((r,o)=>`<li data-name="${r}" data-hash="slide-${o+1}" class="city-slider__slide swiper-slide">
              ${r}
            <button class="deleteFavoriteBtn"><svg class="close-favorite" width="12px" height="12px">
            <use href="/img/symbol-defs.svg#icon-close"></use>
          </svg></button></li>`).join("");N.insertAdjacentHTML("beforeend",t)},I=({name:e,main:t,sys:r,weather:o})=>{const s=document.querySelector(".sunset-time"),a=document.querySelector(".sunrise-time"),c=`<div class="weather__card-oneDay">
      <ul class="oneDayList">
      <li class="oneDayItem"> 
        <img class="weather-imgOneDay" src="https://openweathermap.org/img/wn/${o[0].icon}@2x.png" alt="${o[0].description}" />
        <h2 class="city-name-oneDay">${e}, ${r.country}</h2>
        <p class="temperature-oneDay">${t.temp.toFixed(0)}</p>
        <div class="temperature">
            <div>
                <p class="min-temperature">min </p>
                <span class="teperature-span">${t.temp_min.toFixed(0)}&#176;</span></div>
            <div>
                <p class="max-temperature">max </p>
                <span class="teperature-span">${t.temp_max.toFixed(0)}&#176;</span>
            </div>
        </div> 
      </li>    
      </ul>    
  </div>`;E.innerHTML=c,a.textContent=l(new Date(r.sunrise*1e3),"HH:mm"),s.textContent=l(new Date(r.sunset*1e3),"HH:mm")},f=m.create({baseURL:"https://api.openweathermap.org/data/2.5",params:{appid:"95632b02f9162f375a368971925f5209",units:"metric"}}),F=async e=>{const{data:t}=await f.get("/weather",{params:{q:e}});return console.log(t),t},M=async({latitude:e,longitude:t})=>{const{data:r}=await f.get("/weather",{params:{lat:e,lon:t}});return r},H=async({latitude:e,longitude:t})=>{const{data:r}=await f.get("/forecast",{params:{lat:e,lon:t}});return console.log(r),r},P=m.create({baseURL:"https://api.opencagedata.com/geocode/v1/json",params:{key:"d4683b09d0c94ec0aebf0b2e043decbf",language:"en"}}),T=async({latitude:e,longitude:t})=>{const r=`?q=${e}+${t}`,{data:o}=await P.get(r);return o.results[0].components.country},U=m.create({baseURL:"https://pixabay.com/api/",params:{image_type:"backgrounds",orientation:"horizontal",per_page:"40",key:"37485893-252f507e861118bf45a5e3b29"}}),A=async e=>{const{data:t}=await U.get("",{params:{q:e}});return t.hits},W=e=>Math.floor(Math.random()*(e+1)+1),R=e=>{const t=W(e.length-1),{largeImageURL:r}=e[t];document.body.style=`background: linear-gradient(rgba(255, 255, 53, 0.1), rgba(48, 62, 143, 0.1 )),
  url('${r}') center fixed; background-size: cover;`},i={startBtn:document.querySelector(".start"),stopBtn:document.querySelector(".stop"),form:document.querySelector(".search-form"),swiperList:document.querySelector(".city-slider__wrapper"),saveFavoriteBtn:document.querySelector(".saveFavoriteBtn"),dateOneDay:document.querySelector(".dateOneDay"),month:document.querySelector(".month"),timer:document.querySelector(".timeSpan")},z=()=>{setInterval(()=>{i.timer.textContent=l(new Date,"HH:mm:ss"),i.month.textContent=l(new Date,"LLLL"),i.dateOneDay.textContent=l(new Date,"do E")},1e3)},_=(e,t)=>{try{const r=JSON.stringify(t);localStorage.setItem(e,r)}catch(r){console.error("Set state error: ",r.message)}},j=e=>{try{const t=localStorage.getItem(e);return t===null?void 0:JSON.parse(t)}catch(t){console.error("Get state error: ",t.message)}},u=document.querySelector(".saveFavoriteBtn"),g=()=>{u.classList.add("inFavorite"),u.disabled=!0},J=()=>{u.classList.remove("inFavorite"),u.disabled=!1},q=new $(".city-slider",{modules:[C],navigation:{nextEl:".button-next",prevEl:".button-prev"},slidesPerView:"auto",loop:!1,createElements:!0}),d=j("favorite")||[];i.form.addEventListener("submit",G);function G(e){e.preventDefault();const{value:t}=e.target.elements.user_country;t&&F(t).then(y)}i.saveFavoriteBtn.addEventListener("click",K);function K(){d.push(i.form.elements.user_country.value),_("favorite",d),D([i.form.elements.user_country.value]),g(),q.update()}i.form.addEventListener("input",Q);function Q(e){const t=e.target.value.toLowerCase();if(d.find(r=>r.toLowerCase()===t)){g();return}J()}i.swiperList.addEventListener("click",V);function V(e){if(e.target.nodeName!=="UL"){if(e.target.nodeName==="BUTTON"){const t=e.target.parentNode,r=d.filter(o=>o.toLowerCase()!==t.dataset.name.toLowerCase());_("favorite",r),t.remove()}e.target.nodeName==="LI"&&(i.form.elements.user_country.value=e.target.dataset.name,F(e.target.dataset.name).then(y),g())}}const X=()=>{D(d),q.update()};let O={};Y();function Y(){X(),z();const e=t=>{O=t.coords,M(t.coords).then(I),T(t.coords).then(A).then(R)};navigator.geolocation.getCurrentPosition(e)}const Z=document.querySelector(".buttonsOneOrFive"),w=document.querySelector(".weather__wrapper-oneDay"),b=document.querySelector(".weather__wrapper-oneDayDate"),L=document.querySelector(".weather__wrapper"),S=document.querySelector(".wrapper"),x=document.querySelector(".chart");Z.addEventListener("click",ee);function ee(e){if(e.target.nodeName!=="BUTTON")return;const t=document.querySelector(".btn-five"),r=document.querySelector(".btn-today");if(e.target.dataset.day==="five"){w.style.display="none",b.style.display="none",L.style.display="block",x.style.display="block",S.classList.add("wrapper-with-margin"),t.disabled=!0,r.disabled=!1,t.classList.remove("btn-disActive"),r.classList.add("btn-disActive"),H(O).then(y);return}r.classList.remove("btn-disActive"),t.classList.add("btn-disActive"),r.disabled=!0,t.disabled=!1,w.style.display="flex",b.style.display="flex",L.style.display="none",x.style.display="none",S.classList.remove("wrapper-with-margin")}
//# sourceMappingURL=commonHelpers.js.map
